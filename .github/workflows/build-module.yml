name: Create Release on Tag
on:
  push:
    tags:
      - "v*.*.*"

jobs:
  build:
    name: "Build kmod-amneziawg for NanoPi-R3S (23.05)"
    runs-on: ubuntu-latest
    steps:
      - name: Setup Build Environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo rm -rf /etc/apt/sources.list.d
          sudo apt-get update
          sudo apt-get install -y git python2.7 wget unzip
          # Приведение python к python2.7, если нужно
          sudo update-alternatives --install /usr/bin/python python /usr/bin/python2.7 20
          git config --global user.name "GitHub Actions"
          git config --global user.email "noreply@github.com"
          git clone https://github.com/friendlyarm/repo
          sudo cp repo/repo /usr/bin/
          mkdir project

      - name: Download Source (same as build_img for rk3566 and VERSION=23.05)
        run: |
          cd project
          # Инициализируем репо так же, как для сборки образа NanoPi-R3S
          repo init --depth=1 -u https://github.com/friendlyarm/friendlywrt_manifests -b master-v23.05 \
                    -m rk3566.xml --repo-url=https://github.com/friendlyarm/repo --no-clone-bundle
          repo sync -c kernel --no-clone-bundle
          repo sync -c u-boot --no-clone-bundle
          repo sync -c rkbin --no-clone-bundle
          repo sync -c configs --no-clone-bundle
          repo sync -c device/common --no-clone-bundle
          repo sync -c device/friendlyelec --no-clone-bundle
          repo sync -c scripts --no-clone-bundle
          repo sync -c scripts/sd-fuse --no-clone-bundle
          repo sync -c toolchain --no-clone-bundle

      - name: Prepare Config and Build FriendlyWrt Base
        run: |
          cd project
          echo ". device/friendlyelec/rk3566/base.mk" > .current_config.mk
          echo "TARGET_IMAGE_DIRNAME=friendlywrt23" >> .current_config.mk
          echo "TARGET_FRIENDLYWRT_CONFIG=rockchip" >> .current_config.mk
          # Собираем базовый friendlywrt
          ./build.sh friendlywrt
          # Теперь директория friendlywrt создана

      - name: Build Kernel
        run: |
          cd project
          ./build.sh kernel

      - name: Prepare Feeds and Config
        run: |
          cd project/friendlywrt
          echo "src-git awgopenwrt https://github.com/yury-sannikov/awg-openwrt.git" >> ./feeds.conf.default
          ./scripts/feeds update -a && ./scripts/feeds install -a

          # Очистим .config и добавим нужные пакеты
          cp /dev/null .config
          echo "CONFIG_TARGET_rockchip=y" >> .config
          echo "CONFIG_TARGET_rockchip_armv8=y" >> .config
          echo "CONFIG_PACKAGE_kmod-amneziawg=m" >> .config
          echo "CONFIG_PACKAGE_amneziawg-tools=y" >> .config
          echo "CONFIG_PACKAGE_luci-app-amneziawg=y" >> .config
          echo "CONFIG_PACKAGE_kmod-crypto-lib-chacha20=m" >> .config
          echo "CONFIG_PACKAGE_kmod-crypto-lib-chacha20poly1305=m" >> .config
          echo "CONFIG_PACKAGE_kmod-crypto-chacha20poly1305=m" >> .config

          make defconfig
          FORCE_UNSAFE_CONFIGURE=1 make tools/install -j$(nproc)
          FORCE_UNSAFE_CONFIGURE=1 make toolchain/install -j$(nproc)
          FORCE_UNSAFE_CONFIGURE=1 make target/linux/compile -j$(nproc) V=s

      - name: Build Modules
        run: |
          cd project/friendlywrt
          VERMAGIC=`cat ./build_dir/target-*/linux-*/linux-*/.vermagic`
          echo "Kernel Vermagic: $VERMAGIC"

          make package/kmod-amneziawg/{clean,compile} V=s
          make package/luci-app-amneziawg/{clean,compile} V=s
          make package/amneziawg-tools/{clean,compile} V=s

      - name: Prepare artifacts
        run: |
          cd project/friendlywrt
          tag_name=${GITHUB_REF_NAME}
          mkdir -p awgrelease
          postfix="${tag_name}_v23.05.5_aarch64_generic_rockchip_armv8"
          cp bin/packages/aarch64_generic/awgopenwrt/amneziawg-tools_*.ipk awgrelease/amneziawg-tools_${postfix}.ipk
          cp bin/packages/aarch64_generic/awgopenwrt/luci-app-amneziawg_*.ipk awgrelease/luci-app-amneziawg_${postfix}.ipk
          cp bin/targets/rockchip/armv8/packages/kmod-amneziawg_*.ipk awgrelease/kmod-amneziawg_${postfix}.ipk

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: project/friendlywrt/awgrelease/*.ipk
