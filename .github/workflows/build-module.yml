name: Create Release on Tag
on:
  push:
    tags:
      - "v*.*.*"

jobs:
  build:
    name: "v${{ matrix.build_env.tag }} - ${{ matrix.build_env.pkgarch}} :: ${{ matrix.build_env.target}}/${{ matrix.build_env.subtarget}} build"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        build_env:
          - tag: "23.05.5"
            pkgarch: aarch64_generic
            target: rockchip
            subtarget: armv8
            # vermagic: "0919bf77bd78281b8293e21504faecfb" # Удалено, так как теперь не проверяем статически

    steps:
      - name: Checkout FriendlyWrt Repository
        uses: actions/checkout@v4
        with:
          repository: friendlyarm/friendlywrt
          ref: master-v23.05
          fetch-depth: 0

      - name: Cache Tools and Kernel
        id: cache-tools-kernel
        uses: actions/cache@v4
        env:
          cache-name: "cache-tools-kernel-${{ matrix.build_env.tag }}-${{ matrix.build_env.pkgarch}}-${{ matrix.build_env.target}}-${{ matrix.build_env.subtarget}}"
        with:
          path: "**"
          key: ${{ runner.os }}-build-vm4-${{ env.cache-name }}
          restore-keys: |
            ${{ runner.os }}-build-vm4-cache-tools-kernel-${{ matrix.build_env.tag }}-${{ matrix.build_env.pkgarch}}-

      - name: Building kernel and tools
        run: |
          echo "pkgarch: ${{ matrix.build_env.pkgarch}}, target:${{ matrix.build_env.target}}, subtarget: ${{ matrix.build_env.subtarget}}"

          # Setup & install feeds
          echo "src-git awgopenwrt https://github.com/yury-sannikov/awg-openwrt.git" >> ./feeds.conf.default
          ./scripts/feeds update -a && ./scripts/feeds install -a

          # Setup config with AWG and dependencies
          cp /dev/null .config
          echo "CONFIG_TARGET_${{ matrix.build_env.target }}=y" >> .config
          echo "CONFIG_TARGET_${{ matrix.build_env.target }}_${{ matrix.build_env.subtarget }}=y" >> .config
          echo "CONFIG_PACKAGE_kmod-amneziawg=m" >> .config
          echo "CONFIG_PACKAGE_amneziawg-tools=y" >> .config
          echo "CONFIG_PACKAGE_luci-app-amneziawg=y" >> .config
          echo "CONFIG_PACKAGE_kmod-crypto-lib-chacha20=m" >> .config
          echo "CONFIG_PACKAGE_kmod-crypto-lib-chacha20poly1305=m" >> .config
          echo "CONFIG_PACKAGE_kmod-crypto-chacha20poly1305=m" >> .config

          make defconfig

          echo "    > make tools/install"
          FORCE_UNSAFE_CONFIGURE=1 make tools/install -j$(nproc)

          echo "    > make toolchain/install"
          FORCE_UNSAFE_CONFIGURE=1 make toolchain/install -j$(nproc)

          echo "    > make target/linux/compile"
          FORCE_UNSAFE_CONFIGURE=1 make target/linux/compile -j$(nproc) V=s

          # Проверка vermagic удалена, мы теперь не сравниваем его со статическим значением
          VERMAGIC=`cat ./build_dir/target-*/linux-*/linux-*/.vermagic`
          echo "Kernel Vermagic: $VERMAGIC"

      - name: Build AmneziaWG
        run: |
          VERMAGIC=`cat ./build_dir/target-*/linux-*/linux-*/.vermagic`
          echo "Vermagic: $VERMAGIC"

          # Compile AWG modules and tools
          make package/kmod-amneziawg/{clean,compile} V=s || true
          make package/luci-app-amneziawg/{clean,compile} V=s
          make package/amneziawg-tools/{clean,compile} V=s

      - name: Prepare artifacts
        run: |
          tag_name=${{ github.ref_name }}
          mkdir -p awgrelease
          postfix="${tag_name}_v${{ matrix.build_env.tag }}_${{ matrix.build_env.pkgarch}}_${{ matrix.build_env.target}}_${{ matrix.build_env.subtarget}}"
          cp bin/packages/${{ matrix.build_env.pkgarch }}/awgopenwrt/amneziawg-tools_*.ipk awgrelease/amneziawg-tools_${postfix}.ipk
          cp bin/packages/${{ matrix.build_env.pkgarch }}/awgopenwrt/luci-app-amneziawg_*.ipk awgrelease/luci-app-amneziawg_${postfix}.ipk
          cp bin/targets/${{ matrix.build_env.target}}/${{ matrix.build_env.subtarget}}/packages/kmod-amneziawg_*.ipk awgrelease/kmod-amneziawg_${postfix}.ipk

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: awgrelease/*.ipk
